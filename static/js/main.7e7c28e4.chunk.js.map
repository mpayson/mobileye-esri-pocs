{"version":3,"sources":["esri-loader-options.js","components/HistMinMaxSlideFilter.js","components/LayerPanel.js","stores/Filters.js","Utils.js","config.js","stores/Store.js","Renderers.js","App.js","serviceWorker.js","index.js","icons.js"],"names":["options","url","css","dojoConfig","has","HistMinMaxSlideFilter","observer","props","context","state","sliderValues","hasSlider","onChange","v","setState","onValuesChange","newValues","min","max","store","createSlider","slider","Slider","sliderRef","current","loaded","bins","lowerBound","upperBound","values","excludedBarColor","rangeType","container","precision","listener","watch","React","createRef","loadModules","then","HistogramRangeSlider","catch","er","console","log","this","remove","title","fieldInfo","alias","style","height","paddingBottom","ref","Component","LayerPanel","renderer","onSelectChange","size","marginTop","filters","MinMaxFilter","fieldName","where","featureLayer","lwrUprPromise","field","isLwr","isUpr","histPromise","Promise","resolve","queries","push","onStatisticField","outStatisticField","statisticType","getMinQuery","getMaxQuery","queryFeatures","outStatistics","qRes","attrs","features","attributes","all","getHistogram","minMaxRes","rawMin","rawMax","Math","floor","ceil","layer","numBins","minValue","maxValue","histRes","isMin","isMax","getMinMaxWhere","fields","find","f","name","decorate","observable","load","action","bound","pUtils","config","appId","portalUrl","renderers","Store","layerId","credential","view","whenLayerView","lyr","lV","lyrView","forEach","onApplyFilter","debounce","layerView","filter","effectHandler","autorun","_","mapViewDiv","M","MV","FL","Map","MapView","FeatureLayer","promiseUtils","OAuthInfo","esriId","_buildAutoRunEffects","info","registerOAuthInfos","checkSignInStatus","getCredential","user","userId","portalItem","id","rendererJsonUtils","fromJSON","map","basemap","layers","center","zoom","_loadLayers","join","computed","Header","Content","Sider","MenuFilterIcon","filled","MenuBookmarkIcon","MenuRouteFromIcon","MenuInformationIcon","App","collapsed","navKey","onCollapse","onSelect","item","key","onClose","componentDidMount","modulePromise","loadPromise","mapViewRef","Search","Legend","mapView","search","ui","add","legend","move","panel","signin","theme","mode","lineHeight","float","Item","minHeight","paddingLeft","paddingRight","color","collapsible","defaultSelectedKeys","selectedKeys","onClick","component","span","width","closable","placement","visible","mask","getContainer","position","background","bodyStyle","padding","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7e7c28e4.chunk.js","sourcesContent":["const options = {\n  url: \"https://jsdev.arcgis.com/4.13/\",\n  // url: \"https://js.arcgis.com/4.12/\",\n  // css: \"/jscss/my-theme/main.css\",\n  css: true,\n  dojoConfig: {\n    has: {\n      \"esri-native-promise\": true\n    }\n  }\n}\n\nexport default options;","import React from 'react';\nimport {loadModules} from 'esri-loader';\nimport { observer } from \"mobx-react\";\nimport options from '../esri-loader-options';\n\nconst HistMinMaxSlideFilter = observer(class HistMinMaxSlideFilter extends React.Component{\n  state = {\n    sliderValues: null\n  }\n  hasSlider = false;\n\n  constructor(props, context){\n    super(props, context);\n    this.sliderRef = React.createRef();\n    this.store = props.store;\n  }\n\n  onChange = (v) => {\n    this.setState({sliderValues: v});\n  }\n\n  onValuesChange = (newValues) => {\n    const [min, max] = newValues;\n    this.store.onValuesChange(min, max);\n  }\n\n  createSlider = () => {\n    if (\n      this.slider\n      || !this.Slider\n      || !this.sliderRef.current\n      || !this.store.loaded\n    ) return;\n\n    this.slider = new this.Slider({\n      bins: this.store.bins,\n      min: this.store.lowerBound,\n      max: this.store.upperBound,\n      values: [\n        this.store.min || this.store.lowerBound,\n        this.store.max || this.store.upperBound\n      ],\n      excludedBarColor: \"#bfbfbf\",\n      rangeType: \"between\",\n      container: this.sliderRef.current,\n      precision: 0\n    });\n\n    this.listener = this.slider.watch(\"values\", this.onValuesChange)\n\n  }\n\n  componentDidMount(){\n    loadModules([\n      'esri/widgets/HistogramRangeSlider',\n    ], options)\n    .then(([HistogramRangeSlider]) => {\n      this.Slider = HistogramRangeSlider;\n      this.createSlider();\n    })\n    .catch(er => console.log(er));\n  }\n\n  componentWillUnmount(){\n    if(this.listener) this.listener.remove();\n  }\n\n  render(){\n\n    if(!this.slider && this.store.loaded) this.createSlider();\n\n    const title = this.store.fieldInfo.alias;\n    return(\n      <>\n        <p>{title}</p>\n        <div style={{height: \"6rem\", paddingBottom: \"1rem\"}}>\n          <div ref={this.sliderRef}></div>\n        </div>\n      </>\n    )\n  }\n});\n\nexport default HistMinMaxSlideFilter;","import React from 'react';\nimport { observer } from \"mobx-react\";\nimport { Card } from 'antd';\nimport HistMinMaxSlideFilter from './HistMinMaxSlideFilter';\n\nconst LayerPanel = observer(class LayerPanel extends React.Component{\n\n  state = {\n    renderer: null\n  }\n\n  onSelectChange = (v) => {\n    this.setState({renderer: v});\n  }\n\n  render(){\n\n    return (\n      <>\n        <Card size=\"small\">\n          <h1>Explore</h1>\n        </Card>\n        <Card size=\"small\" style={{marginTop: \"10px\"}}>\n          <h1>Apply Filters</h1>\n          <HistMinMaxSlideFilter\n            store={this.props.store.filters[0]}/>\n          <HistMinMaxSlideFilter\n            store={this.props.store.filters[1]}/>\n          <HistMinMaxSlideFilter\n            store={this.props.store.filters[2]}/>\n          <HistMinMaxSlideFilter\n            store={this.props.store.filters[3]}/>\n          <HistMinMaxSlideFilter\n            store={this.props.store.filters[4]}/>\n        </Card>\n      </>\n    )\n  }\n\n});\n\nexport default LayerPanel;\n","import { decorate, observable, action } from 'mobx';\nimport {loadModules} from 'esri-loader';\nimport options from '../esri-loader-options';\nimport {getMinMaxWhere} from '../Utils';\n\nconst getMaxQuery = (field) => ({\n  onStatisticField: field,\n  outStatisticField: `MAX_${field}`,\n  statisticType: 'max'\n});\nconst getMinQuery = (field) => ({\n  onStatisticField: field,\n  outStatisticField: `MIN_${field}`,\n  statisticType: 'min'\n});\n\nclass Filter {\n  constructor(fieldName){\n    this.field = fieldName;\n    this.fieldInfo = {};\n  }\n  load(featureLayer){\n    if(!featureLayer.loaded){\n      throw \"Please wait until the layer is loaded\";\n    }\n    this.fieldInfo = featureLayer.fields.find(f => f.name === this.field);\n  }\n}\n\nclass MinMaxFilter extends Filter{\n\n  bins = [];\n  loaded = false;\n  min = null;\n  max = null;\n  where = null;\n\n  constructor(fieldName, lowerBound=null, upperBound=null){\n    super(fieldName);\n    this.lowerBound = lowerBound;\n    this.upperBound = upperBound;\n    this.bins = [];\n    this.loaded = false;\n  }\n  load(featureLayer){\n    super.load(featureLayer);\n    const field = this.field;\n\n    const isLwr = this.lowerBound || this.lowerBound === 0;\n    const isUpr = this.upperBound || this.upperBound === 0;\n\n    let histPromise = loadModules([\n      'esri/renderers/smartMapping/statistics/histogram'\n    ], options);\n\n    let lwrUprPromise;\n    if(isLwr && isUpr){\n      lwrUprPromise = Promise.resolve([this.lowerBound, this.upperBound]);\n    } else {\n      let queries = [];\n      if(!isLwr) queries.push(getMinQuery(field));\n      if(!isUpr) queries.push(getMaxQuery(field));\n      lwrUprPromise = featureLayer.queryFeatures({\n        where: \"1=1\",\n        outStatistics: queries\n      }).then(qRes => {\n        const attrs = qRes.features[0].attributes;\n        return [\n          isLwr ? this.lowerBound : attrs[`MIN_${field}`],\n          isUpr ? this.upperBound : attrs[`MAX_${field}`]\n        ]\n      })\n    }\n\n    Promise.all([histPromise, lwrUprPromise])\n      .then(([[getHistogram], minMaxRes]) => {\n        const [rawMin, rawMax] = minMaxRes;\n        this.lowerBound = Math.floor(rawMin);\n        this.upperBound = Math.ceil(rawMax);\n        return getHistogram({\n          layer: featureLayer,\n          field: field,\n          numBins: 50,\n          minValue: this.lowerBound,\n          maxValue: this.upperBound\n        })\n      })\n      .then(histRes => {\n        this.bins = histRes.bins;\n        this.loaded = true;\n      })\n  }\n  onValuesChange(min, max){\n    this.min = min;\n    this.max = max;\n    this.where = getMinMaxWhere(this.field, min, max);\n  }\n}\ndecorate(MinMaxFilter, {\n  min: observable,\n  max: observable,\n  where: observable,\n  loaded: observable,\n  load: action.bound,\n  onValuesChange: action.bound\n})\n\nexport {MinMaxFilter}","const getMinMaxWhere = (field, min, max) => {\n  const isMin = min || min === 0;\n  const isMax = max || max === 0;\n  let where = null;\n  if(isMin && isMax){\n    where = field + \" <= \" + max + \" AND \" + field + \" >= \" + min;\n  } else if(isMax){\n    where = field + \" <= \" + max;\n  } else if(isMin){\n    where = field + \" >= \" + min;\n  }\n  return where;\n}\n\nexport {getMinMaxWhere};","const config = {\n  appId: \"o3Zbi02dIsAez6sL\",\n  portalUrl: \"https://www.arcgis.com/sharing\"\n}\n\nexport default config;","import {decorate, observable, action, computed, autorun} from 'mobx';\nimport { MinMaxFilter } from './Filters';\nimport {loadModules} from 'esri-loader';\nimport config from '../config';\nimport renderers from '../Renderers';\nimport options from '../esri-loader-options';\n\nconst {appId, portalUrl} = config;\nlet pUtils;\n\nconst setRenderer = (lyr, field) => {\n  loadModules(['esri/renderers/support/jsonUtils'], options)\n  .then(([rendererJsonUtils]) => {\n    lyr.renderer = rendererJsonUtils.fromJSON(renderers[field]);\n  });\n}\n\nclass Store {\n\n  credential = {};\n\n  constructor(layerId){\n    this.layerId = layerId;\n    this.filters = [\n      new MinMaxFilter('eventvalue'),\n      new MinMaxFilter('pedestrians_density'),\n      new MinMaxFilter('bicycles_density'),\n      new MinMaxFilter('harsh_cornering_ratio'),\n      new MinMaxFilter('harsh_acc_ratio')\n    ];\n  }\n\n  _loadLayers(){\n    this.view.whenLayerView(this.lyr)\n    .then(lV => {\n      this.lyrView = lV;\n      this.filters.forEach(f => f.load(this.lyr));\n    });\n  }\n\n  _buildAutoRunEffects(){\n    const onApplyFilter = pUtils.debounce(function(layerView, where){\n      layerView.filter = {where};\n    });\n    this.effectHandler = autorun(_ => {\n      const where = this.where;\n      if(this.lyrView && onApplyFilter){\n        onApplyFilter(this.lyrView, where);\n      }\n    });\n  }\n\n  load(mapViewDiv){\n\n    let M, MV, FL;\n    \n    return loadModules([\n      'esri/Map',\n      'esri/views/MapView',\n      'esri/layers/FeatureLayer',\n      'esri/core/promiseUtils',\n      'esri/identity/OAuthInfo',\n      'esri/identity/IdentityManager'\n    ], options)\n    .then(([Map, MapView, FeatureLayer, promiseUtils, OAuthInfo, esriId]) => {\n      pUtils = promiseUtils; \n      this._buildAutoRunEffects();\n\n      M = Map;\n      MV = MapView;\n      FL = FeatureLayer;\n\n      const info = new OAuthInfo({\n        appId\n      });\n      esriId.registerOAuthInfos([info]);\n\n      return esriId.checkSignInStatus(portalUrl)\n        .catch(er => {\n          if(er.name === \"identity-manager:not-authenticated\"){\n            return esriId.getCredential(portalUrl);\n          }\n        });\n    })\n    .then(credential => {\n      this.credential = credential;\n      this.user = credential.userId;\n      this.lyr = new FL({\n        portalItem: {id: this.layerId},\n      });\n      setRenderer(this.lyr, 'eventvalue');\n      this.map = new M({\n        basemap: 'dark-gray-vector',\n        layers: [this.lyr]\n      });\n      this.view = new MV({\n        map: this.map,\n        container: mapViewDiv,\n        center: [-74.00157, 40.71955],\n        zoom: 12\n      });\n      this._loadLayers();\n      return this.view;\n    });\n  }\n\n  get where(){\n    const where = this.filters\n      .filter(f => !!f.where)\n      .map(f => f.where)\n      .join(' AND ');\n    return where ? where : \"1=1\";\n  }\n}\n\ndecorate(Store, {\n  user: observable,\n  where: computed,\n  load: action.bound,\n  _loadLayers: action.bound,\n});\n\nexport default Store;","const renderers = {\n  'eventvalue': {\"visualVariables\":[{\"type\":\"colorInfo\",\"field\":\"eventvalue\",\"valueExpression\":null,\"stops\":[{\"value\":0,\"color\":[255,252,212,255],\"label\":\"0\"},{\"value\":2,\"color\":[177,205,194,255],\"label\":null},{\"value\":4,\"color\":[98,158,176,255],\"label\":\"4\"},{\"value\":6,\"color\":[56,98,122,255],\"label\":null},{\"value\":8,\"color\":[13,38,68,255],\"label\":\"8\"}]}],\n                 \"authoringInfo\":{\n                   \"visualVariables\": [{\"type\":\"colorInfo\",\"minSliderValue\":-9,\"maxSliderValue\":10,\"theme\":\"high-to-low\"}]},\n                 \"type\":\"simple\", \n                 \"symbol\":{\"color\":[170,170,170,255],\"width\":1.5,\"type\":\"esriSLS\",\"style\":\"esriSLSSolid\"}},\n  // 'MATERIAL': {\"visualVariables\":[{\"type\":\"colorInfo\",\"field\":\"MATERIAL\",\"valueExpression\":null,\"stops\":[{\"value\":-2.9,\"color\":[255,252,212,255],\"label\":\"\\u003c -2.9\"},{\"value\":-0.5,\"color\":[177,205,194,255],\"label\":null},{\"value\":1.9,\"color\":[98,158,176,255],\"label\":\"1.9\"},{\"value\":4.3,\"color\":[56,98,122,255],\"label\":null},{\"value\":6.6,\"color\":[13,38,68,255],\"label\":\"\\u003e 6.6\"}]}],\"authoringInfo\":{\"visualVariables\":[{\"type\":\"colorInfo\",\"minSliderValue\":-9,\"maxSliderValue\":99,\"theme\":\"high-to-low\"}]},\"type\":\"simple\", \n  //              \"symbol\":{\"color\":[170,170,170,255],\"width\":1.5,\"type\":\"esriSLS\",\"style\":\"esriSLSSolid\"},}\n}\n\nexport default renderers","import React from 'react'\nimport { observer } from \"mobx-react\";\nimport { Layout, Menu, Drawer, Icon, Row, Col } from 'antd';\nimport LayerFilterIcon from 'calcite-ui-icons-react/LayersIcon';\nimport BookmarkIcon from 'calcite-ui-icons-react/BookmarkIcon';\nimport RouteFromIcon from 'calcite-ui-icons-react/RouteFromIcon';\nimport InformationIcon from 'calcite-ui-icons-react/InformationIcon';\nimport {loadModules} from 'esri-loader';\nimport options from './esri-loader-options';\nimport LayerPanel from './components/LayerPanel';\nimport Store from './stores/Store';\nimport './App.css';\n\nconst { Header, Content, Sider } = Layout;\n\nconst MenuFilterIcon = () => (\n  <LayerFilterIcon size=\"18\" filled/>\n)\nconst MenuBookmarkIcon = () => (\n  <BookmarkIcon size=\"18\" filled/>\n)\nconst MenuRouteFromIcon = () => (\n  <RouteFromIcon size=\"20\" filled/>\n)\nconst MenuInformationIcon = () => (\n  <InformationIcon size=\"17\" filled/>\n)\n\nconst App = observer(class App extends React.Component {\n\n  state = {\n    collapsed: true,\n    loaded: false,\n    navKey: \"Layers\"\n  };\n\n  constructor(props, context){\n    super(props, context);\n    this.mapViewRef = React.createRef();\n    this.store = new Store('9524ea255f4e452bb1e79d951ed65a5f');\n  }\n\n  onCollapse = collapsed => {\n    this.setState({ collapsed });\n  };\n\n  onSelect = item => {\n    const navKey = this.state.navKey === item.key\n      ? null\n      : item.key;\n    this.setState({navKey});\n  }\n\n  onClose = () => {\n    this.setState({\n      navKey: null,\n    });\n  };\n\n  componentDidMount = () => {\n\n    const modulePromise = loadModules([\n      'esri/widgets/Search',\n      'esri/widgets/Legend'\n    ], options);\n    const loadPromise = this.store.load(this.mapViewRef.current);\n\n    Promise.all([modulePromise, loadPromise])\n      .then(([[Search, Legend], mapView]) => {\n        this.view = mapView;\n        const search = new Search({view: this.view});\n        this.view.ui.add(search, \"top-right\");\n        const legend = new Legend({view: this.view});\n        this.view.ui.add(legend, \"bottom-right\");\n        this.view.ui.move(\"zoom\", \"top-right\");\n      });\n\n    // loadModules([\n    //   'esri/Map',\n    //   'esri/views/MapView',\n    //   'esri/layers/FeatureLayer',\n    //   'esri/widgets/Search',\n    //   'esri/widgets/Legend'\n    // ], options)\n    // .then(([Map, MapView, FeatureLayer, Search, Legend]) => {\n    //   this.lyr = new FeatureLayer({\n    //     portalItem: {id: 'f87672e4b2334b09914d0ac418ed6f16'}\n    //   });\n    //   this.map = new Map({\n    //     basemap: 'gray-vector',\n    //     layers: [this.lyr]\n    //   });\n    //   this.view = new MapView({\n    //     map: this.map,\n    //     container: this.mapViewRef.current,\n    //     center: [-118.40399, 34.04809],\n    //     zoom: 11\n    //   });\n    //   const search = new Search({view: this.view});\n    //   this.view.ui.add(search, \"top-right\");\n    //   const legend = new Legend({view: this.view});\n    //   this.view.ui.add(legend, \"bottom-right\");\n    //   this.view.ui.move(\"zoom\", \"top-right\");\n    //   return this.view.whenLayerView(this.lyr)\n    // }).then(lV => {\n    //   this.lyrView = lV\n    //   this.setState({loaded: true})\n    // })\n\n  }\n\n  render() {\n    let panel;\n    switch(this.state.navKey){\n      case 'Layers':\n        panel = <LayerPanel store={this.store} map={this.map} layer={this.lyr} layerView={this.lyrView}/>;\n        break;\n      case 'Bookmarks':\n        panel = <h1>Woah this are some awesome bookmarks!</h1>;\n        break;\n      case 'Route':\n        panel = <h1>Routing seems like a lot of work</h1>;\n        break;\n      case 'About':\n        panel = <h1>This is a slick app! Thanks Max!</h1>;\n        break;\n      default:\n        panel = null;\n    }\n\n    const signin = this.store.user\n      ? (\n        <Menu\n          theme=\"dark\"\n          mode=\"horizontal\"\n          style={{ lineHeight: '64px', float: \"right\" }}\n        >\n          <Menu.Item key=\"sign in\">{this.store.user}</Menu.Item>\n        </Menu>\n      )\n      : null;\n\n    return (\n      <Layout style={{ minHeight: '100vh' }}>\n        <Header style={{paddingLeft: \"1rem\", paddingRight: \"0rem\"}}>\n          <h1 style={{color: \"rgba(255,255,255,0.8\", float: \"left\"}}>Road Safety Score</h1>\n          {signin}\n        </Header>\n        <Layout>\n          <Sider collapsible collapsed={this.state.collapsed} onCollapse={this.onCollapse}>\n            <Menu\n              defaultSelectedKeys={['0']}\n              mode=\"inline\"\n              theme=\"dark\"\n              selectedKeys={[this.state.navKey]}\n              onClick={this.onSelect}>\n              <Menu.Item key=\"Layers\">\n                <Icon component={MenuFilterIcon} />\n                <span>Layers</span>\n              </Menu.Item>\n              <Menu.Item key=\"Bookmarks\">\n                <Icon component={MenuBookmarkIcon} />\n                <span>Bookmarks</span>\n              </Menu.Item>\n              <Menu.Item key=\"Route\">\n                <Icon component={MenuRouteFromIcon} />\n                <span>Route</span>\n              </Menu.Item>\n              <Menu.Item key=\"About\">\n                <Icon component={MenuInformationIcon} />\n                <span>About</span>\n              </Menu.Item>\n            </Menu>\n          </Sider>\n          <Content>\n            <Row>\n              <Col\n                span={24}\n                style={{height: \"calc(100vh - 64px)\"}}>\n              <div\n                ref={this.mapViewRef}\n                style={{width: \"100%\", height: \"100%\"}}/>\n              <Drawer\n                // title={this.state.navKey}\n                closable={false}\n                // onClose={this.onClose}\n                placement=\"left\"\n                visible={this.state.navKey}\n                mask={false}\n                getContainer={false}\n                style={{ position: 'absolute', background: \"#f5f5f5\"}}\n                bodyStyle={{ padding: \"10px\", background: \"#f5f5f5\", height: \"100%\" }}\n              >\n                {panel}\n              </Drawer>\n            </Col>\n            </Row>\n          </Content>\n        </Layout>\n      </Layout>\n    );\n  }\n});\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n \nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// export {\n//   default as DownOutline\n// } from \"@ant-design/icons/lib/outline/DownOutline\";\n\nimport RightOutline from \"@ant-design/icons/lib/outline/RightOutline\";\nimport LeftOutline from \"@ant-design/icons/lib/outline/LeftOutline\";\n\nexport {\n  RightOutline, LeftOutline\n}"],"sourceRoot":""}